# Imagination Zoo — Specificații pentru AEI / GitHub Copilot (MVP)

Acest fișier descrie conceptele, entitățile, regulile de business și fluxurile (cu diagrame Mermaid) pentru aplicația „Imagination Zoo”. Este gândit ca sursă de adevăr pentru un agent AI (AEI) / GitHub Copilot, pentru generarea logicii de business și a scheletului aplicației.

---

## 1) Viziune & Obiective

**Scop:** Copilul creează creaturi amuzante și pornește într-o călătorie narativă ramificată în „The Tree of Light”. Prin alegeri în povești scurte (test grilă), câștigă **Hero Cards** (animale-eroi) și **token-uri de trăsături** (Curaj, Blândețe, Imaginație etc.) care deblochează ramuri/regiuni noi. Progresul culminează în **Eroul Interior** (animalul din copil), un avatar unic construit din alegeri.

**MVP:** Două module principale, economie simplă cu **credite premium** doar pentru „The Tree of Light” (15 credite = 3 niveluri jucabile), fără „a doua monedă” (token-urile de trăsături sunt chei de deblocare, nu monedă consumabilă).

---

## 2) Module Principale

### 2.1. Imagination Laboratory (mod „Fun”, gratuit)
- Combină **cap + corp + coadă** pentru a genera un hibrid.
- Fiecare creatură primește **nume** și **poveste scurtă** generate.
- Creaturile se salvează în **Bestiarul de Hibride** (listă, vizualizare, redenumire, grupare).

### 2.2. The Tree of Light (mod „Story/Progress”, premium)
- **Hub vizual central** (copac magic): rădăcini → trunchi → ramuri (regiuni) → frunze luminoase (eroi descoperiți).
- **Regiunea inițială**: **Ferma** (la rădăcini).
- Fiecare regiune conține **3 povești scurte**; fiecare poveste are **o întrebare grilă**.
- Răspunsurile acordă:
  - **Hero Cards** (animal-eroi personificați, ex. „Leul Curajului”, „Bufnița Înțelepciunii”, „Cățelul Prieteniei”).
  - **Token-uri de trăsături** (ex. Curaj, Blândețe, Imaginație), folosite ca **chei** pentru deblocarea ramurilor superioare.
- **Ramificare din Ferma (exemple MVP):**
  - Token „Curaj” → deblochează **Sahara** sau **Jungla Aventurilor**.
  - Token „Blândețe/Imaginație” → deblochează **Tărâmul Viselor**.
- Acumularea de Hero Cards + token-uri formează progresiv **Eroul Interior** (avatarul copilului).

---

## 3) Economie & Acces

- **Credite Premium**: necesare doar pentru „The Tree of Light”.
  - **15 credite = 3 niveluri** jucabile (1 nivel = 1 regiune × 3 povești × 1 quiz/poveste).
  - Consum de credit la **intrarea într-o regiune** (nu pe poveste individuală).
- **Imagination Laboratory**: gratuit (fără consum de credite).
- **Token-urile de trăsături**: **NU** sunt monedă; sunt **chei** de deblocare a ramurilor (persistă, nu se consumă).

---

## 4) Entități (Model de date – pseudo)

User {
  id: UUID
  name: string
  age_range: enum { 5-7, 8-10, 11-13, 14+ }
  credits_premium: int
  progress: ProgressProfile
  created_at, updated_at: timestamp
}

ProgressProfile {
  level: int                // nivel global în The Tree of Light
  unlocked_regions: Set<RegionId>
  trait_tokens: Map<Trait,int>   // ex. { Courage:2, Kindness:1, Imagination:1 }
  hero_cards_owned: Set<HeroCardId>
  inner_hero: InnerHeroSnapshot? // starea curentă calculată
}

Region {
  id: RegionId
  code: string              // ex. "FARM", "SAHARA", "JUNGLE", "DREAMLAND"
  name: string
  required_tokens: Map<Trait,int> // praguri minime pentru acces
  stories: Story[]          // exact 3 în MVP
  art_theme: string         // pentru UI/temă
  level_index: int          // pentru ordinea verticală în copac
}

Story {
  id: StoryId
  region_id: RegionId
  title: string
  text: LocalizedString     // scurtă narațiune
  quiz: MultipleChoiceQuiz
  rewards: RewardRule[]     // mapare în funcție de variante
}

MultipleChoiceQuiz {
  question: string
  options: Option[]         // 2–4 opțiuni
}

Option {
  id: string                // "A", "B", "C", "D"
  text: string
  outcome_tag: string       // ex. "courage", "kindness", "curiosity", "wisdom"
}

RewardRule {
  outcome_tag: string             // corespunde Option.outcome_tag
  hero_card_id: HeroCardId        // animal-eroi acordat
  trait_delta: Map<Trait,int>     // ex. { Courage:+1 }
}

HeroCard {
  id: HeroCardId
  name: string              // ex. "Leul Curajului"
  trait_focus: Trait        // ex. Courage
  rarity: enum { Common, Rare, Epic } // pentru viitor
  flavor_text: string       // scurtă descriere
  art_ref: string           // referință asset
}

InnerHeroSnapshot {
  animal_code: string       // ex. "LION", "OWL", "PUPPY"...
  computed_at: timestamp
  summary_story: string     // poveste personalizată
  traits_vector: Map<Trait,int>
}

Trait = enum { Courage, Kindness, Imagination, Curiosity, Wisdom }

---

## 5) Fluxuri (Mermaid)

### 5.1. Flux general aplicație
```mermaid
flowchart TD
  A[Start App] --> B[Home]
  B -->|Imagination Laboratory| L1[Combină cap+corp+coadă]
  L1 --> L2[Generează nume+poveste]
  L2 --> L3[Salvare în Bestiar Hibride]

  B -->|The Tree of Light| T1[Intră în Copac]
  T1 --> T2[Regiune: FARM]
  T2 --> T3[Poveste 1 (quiz)]
  T3 --> T4[Reward: Hero Card + Token]
  T4 --> T5[Poveste 2 (quiz)] --> T6[Reward]
  T6 --> T7[Poveste 3 (quiz)] --> T8[Reward]

  T8 --> C1{Token-uri suficiente?}
  C1 -->|Da| U1[Deblochează Ramuri: SAHARA/JUNGLE/DREAMLAND]
  C1 -->|Nu| T2

  U1 --> R1[Selectează regiune deblocată]
  R1 --> R2[3 povești cu quiz-uri]
  R2 --> R3[Hero Cards + Token-uri]
  R3 --> R4[Calculează Eroul Interior]
  R4 --> R5[Actualizează avatar + Copac vizual]
```

### 5.2. Ramificare bazată pe token-uri
```mermaid
flowchart LR
  ROOT[FARM completat] --> TOK{Trait Tokens}
  TOK -->|Courage>=1| SAHARA[(SAHARA)]
  TOK -->|Courage>=1 OR Curiosity>=1| JUNGLE[(JUNGLE)]
  TOK -->|Kindness>=1 OR Imagination>=1| DREAMLAND[(DREAMLAND)]
```

### 5.3. Flux poveste individuală (quiz → reward)
```mermaid
sequenceDiagram
  participant U as User
  participant S as StoryEngine
  participant R as RewardEngine
  U->>S: Citește povestea
  S-->>U: Întrebare grilă + Opțiuni
  U->>S: Alege opțiunea
  S->>R: outcome_tag(opțiune)
  R-->>S: HeroCard + TraitDelta
  S->>U: Afișează Hero Card + efect token
  S->>DB: Persistă completare + rewards
```
