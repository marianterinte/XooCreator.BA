# Nixpacks configuration for building a .NET 8 app on Railway without Docker

[phases.setup]
# Install only the .NET 8 SDK (includes the runtime) and native deps
# Installing both sdk and runtime causes file-collision errors in nix
nixPkgs = [
  "dotnet-sdk_8",
  "icu",
  "zlib",
  "openssl"
]

[phases.install]
# Restore NuGet packages - Railway sets root to XooCreator.BA directory
cmds = [
  "set -e",
  "echo \"Building from directory: $(pwd)\"",
  "echo \"Directory contents:\"",
  "ls -la",
  "echo \"Dotnet info:\"",
  "dotnet --info",
  "echo \"Restoring XooCreator.BA.csproj...\"",
  "dotnet restore XooCreator.BA.csproj --verbosity normal"
]
cacheDirectories = ["/root/.nuget/packages"]

[phases.build]
# Compile and publish to a folder 'out' at the working directory
cmds = [
  "set -e",
  "echo \"Publishing project: XooCreator.BA.csproj\"",
  "dotnet publish XooCreator.BA.csproj -c Release -o ./out --verbosity normal",
  "echo \"Checking published files:\"",
  "ls -la ./out/",
  "echo \"Verifying XooCreator.BA.dll exists:\"",
  "test -f ./out/XooCreator.BA.dll && echo \"XooCreator.BA.dll found\" || echo \"ERROR: XooCreator.BA.dll not found!\""
]

[start]
# Start the published dll (works whether root is repo/ or /XooCreator.BA)
cmd = """
echo "Starting application from $(pwd)"
echo "Checking for XooCreator.BA.dll..."
if [ -f ./out/XooCreator.BA.dll ]; then
  echo "Found XooCreator.BA.dll, starting application..."
  exec dotnet ./out/XooCreator.BA.dll
else
  echo "ERROR: ./out/XooCreator.BA.dll not found!"
  echo "Directory contents:"
  ls -la .
  echo "Out directory contents:"
  ls -la ./out/ || echo "Out directory does not exist"
  exit 1
fi
"""

[variables]
# Bind to the port provided by Railway (also handled by Program.cs)
ASPNETCORE_URLS = "http://0.0.0.0:${PORT}"
# Use full globalization with ICU installed
DOTNET_SYSTEM_GLOBALIZATION_INVARIANT = "false"
# Reduce noisy banners
DOTNET_CLI_TELEMETRY_OPTOUT = "true"
DOTNET_NOLOGO = "true"
