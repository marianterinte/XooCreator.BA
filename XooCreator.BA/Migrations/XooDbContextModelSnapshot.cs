// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using XooCreator.BA.Data;

#nullable disable

namespace XooCreator.BA.Migrations
{
    [DbContext(typeof(XooDbContext))]
    partial class XooDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("XooCreator.BA.Data.AlchimaliaUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Auth0Id")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("HasVisitedImaginationLaboratory")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastLoginAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Picture")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Auth0Id")
                        .IsUnique();

                    b.ToTable("AlchimaliaUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Auth0Id = "test-user-sub",
                            CreatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(6987),
                            Email = "test@example.com",
                            HasVisitedImaginationLaboratory = false,
                            LastLoginAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(6987),
                            Name = "Test User",
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(6988)
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Auth0Id = "marian-test-sub",
                            CreatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(6990),
                            Email = "marian@example.com",
                            HasVisitedImaginationLaboratory = false,
                            LastLoginAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(6991),
                            Name = "Marian",
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(6991)
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsHybrid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Src")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            IsHybrid = false,
                            Label = "Bunny",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/bunny.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            IsHybrid = false,
                            Label = "Hippo",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000006"),
                            Src = "images/animals/base/hippo.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            IsHybrid = false,
                            Label = "Giraffe",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/giraffe.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            IsHybrid = false,
                            Label = "Dog",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/dog.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            IsHybrid = false,
                            Label = "Fox",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000005"),
                            Src = "images/animals/base/fox.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            IsHybrid = false,
                            Label = "Cat",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/cat.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            IsHybrid = false,
                            Label = "Monkey",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/monkey.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            IsHybrid = false,
                            Label = "Camel",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Src = "images/animals/base/camel.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            IsHybrid = false,
                            Label = "Deer",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000005"),
                            Src = "images/animals/base/deer.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000000a"),
                            IsHybrid = false,
                            Label = "Duck",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000006"),
                            Src = "images/animals/base/duck.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000000b"),
                            IsHybrid = false,
                            Label = "Eagle",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000007"),
                            Src = "images/animals/base/eagle.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000000c"),
                            IsHybrid = false,
                            Label = "Elephant",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/elephant.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000000d"),
                            IsHybrid = false,
                            Label = "Ostrich",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/ostrich.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000000e"),
                            IsHybrid = false,
                            Label = "Parrot",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/parrot.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000000f"),
                            IsHybrid = false,
                            Label = "Jaguar",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/jaguar.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            IsHybrid = false,
                            Label = "Toucan",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/toucan.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            IsHybrid = false,
                            Label = "Anaconda",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/anaconda.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            IsHybrid = false,
                            Label = "Capuchin Monkey",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/capuchin_monkey.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000013"),
                            IsHybrid = false,
                            Label = "Poison Dart Frog",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/poison_dart_frog.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000014"),
                            IsHybrid = false,
                            Label = "Lion",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/lion.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000015"),
                            IsHybrid = false,
                            Label = "African Elephant",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/african_elephant.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000016"),
                            IsHybrid = false,
                            Label = "Giraffe",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/giraffe.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000017"),
                            IsHybrid = false,
                            Label = "Zebra",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/zebra.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000018"),
                            IsHybrid = false,
                            Label = "Rhinoceros",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/rhinoceros.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000019"),
                            IsHybrid = false,
                            Label = "Bison",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000007"),
                            Src = "images/animals/base/bison.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000001a"),
                            IsHybrid = false,
                            Label = "Saiga Antelope",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/saiga_antelope.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000001b"),
                            IsHybrid = false,
                            Label = "Gray Wolf",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000005"),
                            Src = "images/animals/base/gray_wolf.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000001c"),
                            IsHybrid = false,
                            Label = "Przewalski's Horse",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000007"),
                            Src = "images/animals/base/przewalski_horse.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000001d"),
                            IsHybrid = false,
                            Label = "Steppe Eagle",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000007"),
                            Src = "images/animals/base/steppe_eagle.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000001e"),
                            IsHybrid = false,
                            Label = "Cow",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/cow.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000001f"),
                            IsHybrid = false,
                            Label = "Sheep",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/sheep.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000020"),
                            IsHybrid = false,
                            Label = "Horse",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/horse.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000021"),
                            IsHybrid = false,
                            Label = "Chicken",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/chicken.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000022"),
                            IsHybrid = false,
                            Label = "Pig",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/pig.jpg"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.AnimalPartSupport", b =>
                {
                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uuid");

                    b.Property<string>("PartKey")
                        .HasColumnType("character varying(32)");

                    b.HasKey("AnimalId", "PartKey");

                    b.HasIndex("PartKey");

                    b.ToTable("AnimalPartSupports");

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000001"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000001"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000001"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000002"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000002"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000002"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "horn"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "horns"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000004"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000004"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000004"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000005"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000005"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000005"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000006"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000006"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000006"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000007"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000007"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000007"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000008"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000008"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000008"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "horn"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "horns"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000c"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000c"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000c"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000f"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000f"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000f"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000011"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000011"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000011"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000012"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000012"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000012"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000013"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000013"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000013"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000013"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000014"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000014"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000014"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000015"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000015"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000015"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000016"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000016"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000016"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000016"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000016"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000017"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000017"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000017"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000017"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000017"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            PartKey = "horn"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000019"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000019"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000019"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            PartKey = "horns"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001b"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001b"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001b"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001c"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001c"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001c"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001c"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001c"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001e"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001e"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001e"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001f"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001f"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001f"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000020"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000020"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000020"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000020"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000020"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000022"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000022"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000022"),
                            PartKey = "arms"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.AnimalTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId", "LanguageCode")
                        .IsUnique();

                    b.ToTable("AnimalTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2877dc4e-1c73-47e3-b074-629f1e0ef66c"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Label = "Bunny",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("cfafc3c7-e8cb-42cd-a525-d4427354b00c"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Label = "Hippo",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("fd55bf76-bc2b-40d2-89f9-232721f850b8"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Label = "Giraffe",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("b8b36bcb-de3d-4c96-be2a-8efb83e43e1a"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Label = "Dog",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("f291b18e-2872-4e2a-9343-8802ea9f3e98"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000005"),
                            Label = "Fox",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("ca92e177-58cb-45c6-8771-9361a8833e72"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000006"),
                            Label = "Cat",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("f31193d6-03ab-4eef-a5f1-aa2eb242fdec"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000007"),
                            Label = "Monkey",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("a0b8989b-a4cf-4fb5-a5d0-40171c51f45f"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000008"),
                            Label = "Camel",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("4757b33f-402d-4f68-b84c-587d3610dff7"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            Label = "Deer",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("2779006f-d257-43b5-ac00-87730346a00a"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            Label = "Duck",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("913fe007-3e57-428b-8fe4-d9c07cb53d98"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            Label = "Eagle",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("ff06a89f-e99f-43a1-87c7-d689e247ffed"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000c"),
                            Label = "Elephant",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("2ea5e5bd-13d5-4dfc-a34b-8c56fc48d03f"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            Label = "Ostrich",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("c071da0d-1f57-468a-875a-1f4c89086b5c"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            Label = "Parrot",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("896c0e14-5bbe-40fd-b66b-1489f2fccf92"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000f"),
                            Label = "Jaguar",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("72481bf3-e489-42b1-9872-521a43f15093"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            Label = "Toucan",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("78f5273b-3d49-4406-9908-b2cd879d579f"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000011"),
                            Label = "Anaconda",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("ac459a7f-d90e-4f69-86cc-e6549e302a93"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000012"),
                            Label = "Capuchin Monkey",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("249c861e-f5d9-4514-8c3f-3465c30c1ddd"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000013"),
                            Label = "Poison Dart Frog",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("802ac0ae-fe6c-49bc-b261-530187986702"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000014"),
                            Label = "Lion",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("d0965adf-04e7-42b4-b963-f03f9058444e"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000015"),
                            Label = "African Elephant",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("bdcc3c96-78a8-4a08-a735-71e2b1ab36d6"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000016"),
                            Label = "Giraffe",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("d4ace6cc-c055-4d67-92f8-20e15947da6e"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000017"),
                            Label = "Zebra",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("3ac442af-ed65-429c-8993-3fa248122901"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            Label = "Rhinoceros",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("0bc01641-d4b2-48f0-8eb9-4d8f96bd3384"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000019"),
                            Label = "Bison",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("c33867e4-5bfc-43e6-a8ff-4b7d2c6577a2"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            Label = "Saiga Antelope",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("0350c4dc-b04a-4175-abd6-cfcc88123c44"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001b"),
                            Label = "Gray Wolf",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("2796d2a6-c9e4-46cc-84f4-fb6c0f218c9a"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001c"),
                            Label = "Przewalski's Horse",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("d555c3f8-d2ab-4d12-9181-c0f8f1a0d621"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            Label = "Steppe Eagle",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("1a9b19db-4a4f-445d-8bb0-2a0fe0e805f3"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001e"),
                            Label = "Cow",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("c6d31223-9896-4c7c-acfb-32612779f041"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001f"),
                            Label = "Sheep",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("023c538e-66b5-405a-83e9-75e38234f789"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000020"),
                            Label = "Horse",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("f6bdbf5d-d5af-4337-a005-74eaeeda203e"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            Label = "Chicken",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("76759149-8316-4643-bc8c-dd5966805c17"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000022"),
                            Label = "Pig",
                            LanguageCode = "en-us"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.BestiaryItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ArmsKey")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("BodyKey")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HeadKey")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Story")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)");

                    b.HasKey("Id");

                    b.ToTable("BestiaryItems");
                });

            modelBuilder.Entity("XooCreator.BA.Data.BodyPart", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("IsBaseLocked")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Key");

                    b.ToTable("BodyParts");

                    b.HasData(
                        new
                        {
                            Key = "head",
                            Image = "images/bodyparts/face.webp",
                            IsBaseLocked = false,
                            Name = "Head"
                        },
                        new
                        {
                            Key = "body",
                            Image = "images/bodyparts/body.webp",
                            IsBaseLocked = false,
                            Name = "Body"
                        },
                        new
                        {
                            Key = "arms",
                            Image = "images/bodyparts/hands.webp",
                            IsBaseLocked = false,
                            Name = "Arms"
                        },
                        new
                        {
                            Key = "legs",
                            Image = "images/bodyparts/legs.webp",
                            IsBaseLocked = true,
                            Name = "Legs"
                        },
                        new
                        {
                            Key = "tail",
                            Image = "images/bodyparts/tail.webp",
                            IsBaseLocked = true,
                            Name = "Tail"
                        },
                        new
                        {
                            Key = "wings",
                            Image = "images/bodyparts/wings.webp",
                            IsBaseLocked = true,
                            Name = "Wings"
                        },
                        new
                        {
                            Key = "horn",
                            Image = "images/bodyparts/horn.webp",
                            IsBaseLocked = true,
                            Name = "Horn"
                        },
                        new
                        {
                            Key = "horns",
                            Image = "images/bodyparts/horns.webp",
                            IsBaseLocked = true,
                            Name = "Horns"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.BodyPartTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyPartKey")
                        .IsRequired()
                        .HasColumnType("character varying(32)");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BodyPartKey", "LanguageCode")
                        .IsUnique();

                    b.ToTable("BodyPartTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3bb1c7f-e28d-4686-96e5-76ae61bc9e0c"),
                            BodyPartKey = "head",
                            LanguageCode = "en-us",
                            Name = "Head"
                        },
                        new
                        {
                            Id = new Guid("80f4ad88-7d5f-4bd6-a857-123de775485c"),
                            BodyPartKey = "body",
                            LanguageCode = "en-us",
                            Name = "Body"
                        },
                        new
                        {
                            Id = new Guid("c0fa3e92-838d-4c67-ad4f-bdb0e83dec81"),
                            BodyPartKey = "arms",
                            LanguageCode = "en-us",
                            Name = "Arms"
                        },
                        new
                        {
                            Id = new Guid("10b15373-8fe0-49fb-a4cf-bafc6e514c7d"),
                            BodyPartKey = "legs",
                            LanguageCode = "en-us",
                            Name = "Legs"
                        },
                        new
                        {
                            Id = new Guid("52e7d19a-0582-487b-be6c-48a5d95a1892"),
                            BodyPartKey = "tail",
                            LanguageCode = "en-us",
                            Name = "Tail"
                        },
                        new
                        {
                            Id = new Guid("70165d20-aa6b-44b1-aa10-29e0e7f990b3"),
                            BodyPartKey = "wings",
                            LanguageCode = "en-us",
                            Name = "Wings"
                        },
                        new
                        {
                            Id = new Guid("a8745cc6-d758-4b84-93ae-1d4b633dce9a"),
                            BodyPartKey = "horn",
                            LanguageCode = "en-us",
                            Name = "Horn"
                        },
                        new
                        {
                            Id = new Guid("d865c255-7248-4526-9c5f-fa78f0d1343d"),
                            BodyPartKey = "horns",
                            LanguageCode = "en-us",
                            Name = "Horns"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.BuilderConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BaseUnlockedAnimalIds")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BaseUnlockedBodyPartKeys")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BuilderConfigs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseUnlockedAnimalIds = "[\"00000000-0000-0000-0000-000000000001\",\"00000000-0000-0000-0000-000000000002\",\"00000000-0000-0000-0000-000000000003\"]",
                            BaseUnlockedBodyPartKeys = "[\"head\",\"body\",\"arms\"]"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.Creature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Archetype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PromptUsedJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Story")
                        .HasColumnType("text");

                    b.Property<string>("ThumbUrl")
                        .HasColumnType("text");

                    b.Property<string>("TraitsJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("TreeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TreeId");

                    b.HasIndex("UserId");

                    b.ToTable("Creatures");
                });

            modelBuilder.Entity("XooCreator.BA.Data.CreditTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Reference")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CreditTransactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Amount = 15,
                            CreatedAt = new DateTime(2025, 10, 13, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7194),
                            Reference = "test-purchase-marian",
                            Type = 0,
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Amount = -5,
                            CreatedAt = new DateTime(2025, 10, 14, 13, 36, 47, 320, DateTimeKind.Utc).AddTicks(7204),
                            Reference = "test-generation",
                            Type = 1,
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.CreditWallet", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("Balance")
                        .HasColumnType("integer");

                    b.Property<int>("DiscoveryBalance")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId");

                    b.ToTable("CreditWallets");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Balance = 5,
                            DiscoveryBalance = 0,
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7067)
                        },
                        new
                        {
                            UserId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Balance = 5,
                            DiscoveryBalance = 0,
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7069)
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroDefinition", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("CourageCost")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreativityCost")
                        .HasColumnType("integer");

                    b.Property<int>("CuriosityCost")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsUnlocked")
                        .HasColumnType("boolean");

                    b.Property<double>("PositionX")
                        .HasColumnType("decimal(10,6)");

                    b.Property<double>("PositionY")
                        .HasColumnType("decimal(10,6)");

                    b.Property<string>("PrerequisitesJson")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("RewardsJson")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<int>("SafetyCost")
                        .HasColumnType("integer");

                    b.Property<int>("ThinkingCost")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("HeroDefinitions");
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroDefinitionTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeroDefinitionId")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Story")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HeroDefinitionId", "LanguageCode")
                        .IsUnique();

                    b.ToTable("HeroDefinitionTranslations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("HeroId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeroType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SourceStoryId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UnlockedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "HeroId", "HeroType")
                        .IsUnique();

                    b.ToTable("HeroProgress");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            HeroId = "seed",
                            HeroType = "HERO_TREE_TRANSFORMATION",
                            SourceStoryId = "",
                            UnlockedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7167),
                            UserId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            HeroId = "seed",
                            HeroType = "HERO_TREE_TRANSFORMATION",
                            SourceStoryId = "",
                            UnlockedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7169),
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroTreeProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NodeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TokensCostCourage")
                        .HasColumnType("integer");

                    b.Property<int>("TokensCostCreativity")
                        .HasColumnType("integer");

                    b.Property<int>("TokensCostCuriosity")
                        .HasColumnType("integer");

                    b.Property<int>("TokensCostSafety")
                        .HasColumnType("integer");

                    b.Property<int>("TokensCostThinking")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UnlockedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "NodeId")
                        .IsUnique();

                    b.ToTable("HeroTreeProgress");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Error")
                        .HasColumnType("text");

                    b.Property<string>("PayloadJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResultUrl")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasMaxLength(24)
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasMaxLength(24)
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Sahara"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000002"),
                            Name = "Jungle"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000003"),
                            Name = "Farm"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000004"),
                            Name = "Savanna"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000005"),
                            Name = "Forest"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000006"),
                            Name = "Wetlands"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000007"),
                            Name = "Mountains"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AnswerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<Guid>("StoryTileId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TokensJson")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StoryTileId", "AnswerId")
                        .IsUnique();

                    b.ToTable("StoryAnswers");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswerToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid>("StoryAnswerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("StoryAnswerId");

                    b.ToTable("StoryAnswerTokens");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswerTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<Guid>("StoryAnswerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StoryAnswerId", "LanguageCode")
                        .IsUnique();

                    b.ToTable("StoryAnswerTranslations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CoverImageUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("StoryId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("StoryId")
                        .IsUnique();

                    b.ToTable("StoryDefinitions");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryDefinitionTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<Guid>("StoryDefinitionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StoryDefinitionId", "LanguageCode")
                        .IsUnique();

                    b.ToTable("StoryDefinitionTranslations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SelectedAnswer")
                        .HasColumnType("text");

                    b.Property<string>("StoryId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TokensJson")
                        .HasColumnType("text");

                    b.Property<string>("TreeConfigurationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TreeConfigurationId");

                    b.HasIndex("UserId", "StoryId", "TreeConfigurationId")
                        .IsUnique();

                    b.ToTable("StoryProgress");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryTile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AudioUrl")
                        .HasColumnType("text");

                    b.Property<string>("Caption")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Question")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<Guid>("StoryDefinitionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<string>("TileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("StoryDefinitionId", "TileId")
                        .IsUnique();

                    b.ToTable("StoryTiles");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryTileTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Caption")
                        .HasColumnType("text");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Question")
                        .HasColumnType("text");

                    b.Property<Guid>("StoryTileId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StoryTileId", "LanguageCode")
                        .IsUnique();

                    b.ToTable("StoryTileTranslations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Tree", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentTier")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("RootType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Trees");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeChoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BranchType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Tier")
                        .HasColumnType("integer");

                    b.Property<string>("TraitAwarded")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TreeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TreeId", "Tier")
                        .IsUnique();

                    b.ToTable("TreeChoices");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeConfiguration", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TreeConfigurations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsUnlocked")
                        .HasColumnType("boolean");

                    b.Property<string>("RegionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TreeConfigurationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UnlockedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TreeConfigurationId");

                    b.HasIndex("UserId", "RegionId", "TreeConfigurationId")
                        .IsUnique();

                    b.ToTable("TreeProgress");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PufpufMessage")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("TreeConfigurationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("TreeConfigurationId");

                    b.HasIndex("Id", "TreeConfigurationId")
                        .IsUnique();

                    b.ToTable("TreeRegions");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeStoryNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RegionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RewardImageUrl")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("StoryId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TreeConfigurationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("TreeConfigurationId");

                    b.HasIndex("StoryId", "RegionId", "TreeConfigurationId")
                        .IsUnique();

                    b.ToTable("TreeStoryNodes");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeUnlockRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FromId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("MinCount")
                        .HasColumnType("integer");

                    b.Property<string>("RequiredStoriesCsv")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("StoryId")
                        .HasColumnType("text");

                    b.Property<string>("ToRegionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TreeConfigurationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("TreeConfigurationId");

                    b.ToTable("TreeUnlockRules");
                });

            modelBuilder.Entity("XooCreator.BA.Data.UserBestiary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BestiaryItemId")
                        .HasColumnType("uuid");

                    b.Property<string>("BestiaryType")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<DateTime>("DiscoveredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BestiaryItemId");

                    b.HasIndex("UserId", "BestiaryItemId", "BestiaryType")
                        .IsUnique();

                    b.ToTable("UserBestiary", (string)null);
                });

            modelBuilder.Entity("XooCreator.BA.Data.UserStoryReadProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ReadAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StoryId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "StoryId", "TileId")
                        .IsUnique();

                    b.ToTable("UserStoryReadProgress");
                });

            modelBuilder.Entity("XooCreator.BA.Data.UserTokenBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Type", "Value")
                        .IsUnique();

                    b.ToTable("UserTokenBalances");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            CreatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7107),
                            Quantity = 5,
                            Type = "TreeOfHeroes",
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7108),
                            UserId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Value = "courage"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            CreatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7110),
                            Quantity = 5,
                            Type = "TreeOfHeroes",
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7111),
                            UserId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Value = "curiosity"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa3"),
                            CreatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7113),
                            Quantity = 5,
                            Type = "TreeOfHeroes",
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7114),
                            UserId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Value = "thinking"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa4"),
                            CreatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7116),
                            Quantity = 5,
                            Type = "TreeOfHeroes",
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7116),
                            UserId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Value = "creativity"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa5"),
                            CreatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7119),
                            Quantity = 5,
                            Type = "TreeOfHeroes",
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7119),
                            UserId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Value = "safety"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb1"),
                            CreatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7122),
                            Quantity = 5,
                            Type = "TreeOfHeroes",
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7122),
                            UserId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Value = "courage"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb2"),
                            CreatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7124),
                            Quantity = 5,
                            Type = "TreeOfHeroes",
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7125),
                            UserId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Value = "curiosity"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb3"),
                            CreatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7127),
                            Quantity = 5,
                            Type = "TreeOfHeroes",
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7128),
                            UserId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Value = "thinking"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb4"),
                            CreatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7130),
                            Quantity = 5,
                            Type = "TreeOfHeroes",
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7130),
                            UserId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Value = "creativity"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb5"),
                            CreatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7133),
                            Quantity = 5,
                            Type = "TreeOfHeroes",
                            UpdatedAt = new DateTime(2025, 10, 14, 15, 36, 47, 320, DateTimeKind.Utc).AddTicks(7133),
                            UserId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Value = "safety"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.Animal", b =>
                {
                    b.HasOne("XooCreator.BA.Data.Region", "Region")
                        .WithMany("Animals")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("XooCreator.BA.Data.AnimalPartSupport", b =>
                {
                    b.HasOne("XooCreator.BA.Data.Animal", "Animal")
                        .WithMany("SupportedParts")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XooCreator.BA.Data.BodyPart", "Part")
                        .WithMany()
                        .HasForeignKey("PartKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("XooCreator.BA.Data.AnimalTranslation", b =>
                {
                    b.HasOne("XooCreator.BA.Data.Animal", "Animal")
                        .WithMany("Translations")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("XooCreator.BA.Data.BodyPartTranslation", b =>
                {
                    b.HasOne("XooCreator.BA.Data.BodyPart", "BodyPart")
                        .WithMany("Translations")
                        .HasForeignKey("BodyPartKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyPart");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Creature", b =>
                {
                    b.HasOne("XooCreator.BA.Data.Tree", "Tree")
                        .WithMany()
                        .HasForeignKey("TreeId");

                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tree");

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.CreditTransaction", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.CreditWallet", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithOne()
                        .HasForeignKey("XooCreator.BA.Data.CreditWallet", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroDefinitionTranslation", b =>
                {
                    b.HasOne("XooCreator.BA.Data.HeroDefinition", "HeroDefinition")
                        .WithMany("Translations")
                        .HasForeignKey("HeroDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeroDefinition");
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroProgress", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroTreeProgress", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Job", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswer", b =>
                {
                    b.HasOne("XooCreator.BA.Data.StoryTile", "StoryTile")
                        .WithMany("Answers")
                        .HasForeignKey("StoryTileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoryTile");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswerToken", b =>
                {
                    b.HasOne("XooCreator.BA.Data.StoryAnswer", "StoryAnswer")
                        .WithMany("Tokens")
                        .HasForeignKey("StoryAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoryAnswer");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswerTranslation", b =>
                {
                    b.HasOne("XooCreator.BA.Data.StoryAnswer", "StoryAnswer")
                        .WithMany("Translations")
                        .HasForeignKey("StoryAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoryAnswer");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryDefinitionTranslation", b =>
                {
                    b.HasOne("XooCreator.BA.Data.StoryDefinition", "StoryDefinition")
                        .WithMany("Translations")
                        .HasForeignKey("StoryDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoryDefinition");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryProgress", b =>
                {
                    b.HasOne("XooCreator.BA.Data.TreeConfiguration", "TreeConfiguration")
                        .WithMany()
                        .HasForeignKey("TreeConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TreeConfiguration");

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryTile", b =>
                {
                    b.HasOne("XooCreator.BA.Data.StoryDefinition", "StoryDefinition")
                        .WithMany("Tiles")
                        .HasForeignKey("StoryDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoryDefinition");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryTileTranslation", b =>
                {
                    b.HasOne("XooCreator.BA.Data.StoryTile", "StoryTile")
                        .WithMany("Translations")
                        .HasForeignKey("StoryTileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoryTile");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Tree", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeChoice", b =>
                {
                    b.HasOne("XooCreator.BA.Data.Tree", "Tree")
                        .WithMany("Choices")
                        .HasForeignKey("TreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tree");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeProgress", b =>
                {
                    b.HasOne("XooCreator.BA.Data.TreeConfiguration", "TreeConfiguration")
                        .WithMany()
                        .HasForeignKey("TreeConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TreeConfiguration");

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeRegion", b =>
                {
                    b.HasOne("XooCreator.BA.Data.TreeConfiguration", "TreeConfiguration")
                        .WithMany()
                        .HasForeignKey("TreeConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TreeConfiguration");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeStoryNode", b =>
                {
                    b.HasOne("XooCreator.BA.Data.TreeRegion", "Region")
                        .WithMany("Stories")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XooCreator.BA.Data.StoryDefinition", "StoryDefinition")
                        .WithMany()
                        .HasForeignKey("StoryId")
                        .HasPrincipalKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XooCreator.BA.Data.TreeConfiguration", "TreeConfiguration")
                        .WithMany()
                        .HasForeignKey("TreeConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("StoryDefinition");

                    b.Navigation("TreeConfiguration");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeUnlockRule", b =>
                {
                    b.HasOne("XooCreator.BA.Data.TreeConfiguration", "TreeConfiguration")
                        .WithMany()
                        .HasForeignKey("TreeConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TreeConfiguration");
                });

            modelBuilder.Entity("XooCreator.BA.Data.UserBestiary", b =>
                {
                    b.HasOne("XooCreator.BA.Data.BestiaryItem", "BestiaryItem")
                        .WithMany()
                        .HasForeignKey("BestiaryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BestiaryItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.UserStoryReadProgress", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.UserTokenBalance", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Animal", b =>
                {
                    b.Navigation("SupportedParts");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.BodyPart", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroDefinition", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Region", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswer", b =>
                {
                    b.Navigation("Tokens");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryDefinition", b =>
                {
                    b.Navigation("Tiles");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryTile", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Tree", b =>
                {
                    b.Navigation("Choices");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeRegion", b =>
                {
                    b.Navigation("Stories");
                });
#pragma warning restore 612, 618
        }
    }
}
