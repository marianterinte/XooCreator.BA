// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using XooCreator.BA.Data;

#nullable disable

namespace XooCreator.BA.Migrations
{
    [DbContext(typeof(XooDbContext))]
    [Migration("20251023212436_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("XooCreator.BA.Data.AlchimaliaUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Auth0Id")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("HasVisitedImaginationLaboratory")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastLoginAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Picture")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Auth0Id")
                        .IsUnique();

                    b.ToTable("AlchimaliaUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Auth0Id = "test-user-sub",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 438, DateTimeKind.Utc).AddTicks(2402),
                            Email = "test@example.com",
                            HasVisitedImaginationLaboratory = false,
                            LastLoginAt = new DateTime(2025, 10, 23, 21, 24, 36, 438, DateTimeKind.Utc).AddTicks(2403),
                            Name = "Test User",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 438, DateTimeKind.Utc).AddTicks(2404)
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Auth0Id = "marian-test-sub",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 438, DateTimeKind.Utc).AddTicks(2406),
                            Email = "marian@example.com",
                            HasVisitedImaginationLaboratory = false,
                            LastLoginAt = new DateTime(2025, 10, 23, 21, 24, 36, 438, DateTimeKind.Utc).AddTicks(2407),
                            Name = "Marian",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 438, DateTimeKind.Utc).AddTicks(2407)
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsHybrid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Src")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            IsHybrid = false,
                            Label = "Bunny",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/bunny.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            IsHybrid = false,
                            Label = "Hippo",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000006"),
                            Src = "images/animals/base/hippo.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            IsHybrid = false,
                            Label = "Giraffe",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/giraffe.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            IsHybrid = false,
                            Label = "Dog",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/dog.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            IsHybrid = false,
                            Label = "Fox",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000005"),
                            Src = "images/animals/base/fox.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            IsHybrid = false,
                            Label = "Cat",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/cat.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            IsHybrid = false,
                            Label = "Monkey",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/monkey.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            IsHybrid = false,
                            Label = "Camel",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Src = "images/animals/base/camel.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            IsHybrid = false,
                            Label = "Deer",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000005"),
                            Src = "images/animals/base/deer.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000000a"),
                            IsHybrid = false,
                            Label = "Duck",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000006"),
                            Src = "images/animals/base/duck.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000000b"),
                            IsHybrid = false,
                            Label = "Eagle",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000007"),
                            Src = "images/animals/base/eagle.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000000c"),
                            IsHybrid = false,
                            Label = "Elephant",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/elephant.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000000d"),
                            IsHybrid = false,
                            Label = "Ostrich",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/ostrich.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000000e"),
                            IsHybrid = false,
                            Label = "Parrot",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/parrot.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000000f"),
                            IsHybrid = false,
                            Label = "Jaguar",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/jaguar.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            IsHybrid = false,
                            Label = "Toucan",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/toucan.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            IsHybrid = false,
                            Label = "Anaconda",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/anaconda.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            IsHybrid = false,
                            Label = "Capuchin Monkey",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/capuchin_monkey.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000013"),
                            IsHybrid = false,
                            Label = "Poison Dart Frog",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Src = "images/animals/base/poison_dart_frog.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000014"),
                            IsHybrid = false,
                            Label = "Lion",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/lion.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000015"),
                            IsHybrid = false,
                            Label = "African Elephant",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/african_elephant.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000016"),
                            IsHybrid = false,
                            Label = "Giraffe",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/giraffe.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000017"),
                            IsHybrid = false,
                            Label = "Zebra",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/zebra.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000018"),
                            IsHybrid = false,
                            Label = "Rhinoceros",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/rhinoceros.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000019"),
                            IsHybrid = false,
                            Label = "Bison",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000007"),
                            Src = "images/animals/base/bison.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000001a"),
                            IsHybrid = false,
                            Label = "Saiga Antelope",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Src = "images/animals/base/saiga_antelope.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000001b"),
                            IsHybrid = false,
                            Label = "Gray Wolf",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000005"),
                            Src = "images/animals/base/gray_wolf.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000001c"),
                            IsHybrid = false,
                            Label = "Przewalski's Horse",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000007"),
                            Src = "images/animals/base/przewalski_horse.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000001d"),
                            IsHybrid = false,
                            Label = "Steppe Eagle",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000007"),
                            Src = "images/animals/base/steppe_eagle.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000001e"),
                            IsHybrid = false,
                            Label = "Cow",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/cow.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000001f"),
                            IsHybrid = false,
                            Label = "Sheep",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/sheep.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000020"),
                            IsHybrid = false,
                            Label = "Horse",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/horse.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000021"),
                            IsHybrid = false,
                            Label = "Chicken",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/chicken.jpg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000022"),
                            IsHybrid = false,
                            Label = "Pig",
                            RegionId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Src = "images/animals/base/pig.jpg"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.AnimalPartSupport", b =>
                {
                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uuid");

                    b.Property<string>("PartKey")
                        .HasColumnType("character varying(32)");

                    b.HasKey("AnimalId", "PartKey");

                    b.HasIndex("PartKey");

                    b.ToTable("AnimalPartSupports");

                    b.HasData(
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000001"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000001"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000001"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000002"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000002"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000002"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "horn"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            PartKey = "horns"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000004"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000004"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000004"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000005"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000005"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000005"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000006"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000006"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000006"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000007"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000007"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000007"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000008"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000008"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000008"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "horn"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            PartKey = "horns"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000c"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000c"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000c"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000f"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000f"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000f"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000011"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000011"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000011"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000012"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000012"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000012"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000013"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000013"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000013"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000013"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000014"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000014"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000014"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000015"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000015"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000015"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000016"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000016"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000016"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000016"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000016"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000017"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000017"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000017"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000017"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000017"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            PartKey = "horn"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000019"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000019"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000019"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            PartKey = "horns"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001b"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001b"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001b"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001c"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001c"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001c"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001c"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001c"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001e"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001e"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001e"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001f"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001f"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001f"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000020"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000020"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000020"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000020"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000020"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            PartKey = "arms"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            PartKey = "legs"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            PartKey = "tail"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            PartKey = "wings"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000022"),
                            PartKey = "head"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000022"),
                            PartKey = "body"
                        },
                        new
                        {
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000022"),
                            PartKey = "arms"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.AnimalTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uuid");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId", "LanguageCode")
                        .IsUnique();

                    b.ToTable("AnimalTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4da024f8-e4b6-4c5d-a0c3-9278543b0156"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Label = "Bunny",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("a8b7f4e2-7490-458c-a919-03c03f4ec6e4"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Label = "Hippo",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("e93f0133-40a1-4293-a90b-8d8fa113d6d2"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Label = "Giraffe",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("530dabe3-7a78-42db-8fed-fe634508dea3"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Label = "Dog",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("9445f66d-971a-4cb1-a8d3-2c9b8070e30f"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000005"),
                            Label = "Fox",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("e1a62546-07c6-489e-9eee-dd4f9ea6573a"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000006"),
                            Label = "Cat",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("4cc058cf-2b09-435b-bea0-6111e5f27254"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000007"),
                            Label = "Monkey",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("5d0920c4-974f-4f11-8202-6908296845ab"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000008"),
                            Label = "Camel",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("762249de-47ec-4b22-8d20-bf102a6795b3"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000009"),
                            Label = "Deer",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("aea9a4a2-af33-4c31-89c4-f561708f905a"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000a"),
                            Label = "Duck",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("4ce497f5-30dd-4143-abec-f18ca3e24626"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000b"),
                            Label = "Eagle",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("5ce0bf94-6b95-4378-af5b-f93d6217fec2"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000c"),
                            Label = "Elephant",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("d1930d14-7510-46c8-a747-974e91086b85"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000d"),
                            Label = "Ostrich",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("70368931-45d5-49b2-b710-1ea950043869"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000e"),
                            Label = "Parrot",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("79f97994-88e6-45ef-a64c-a5c210cec2b0"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000000f"),
                            Label = "Jaguar",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("0acd47ef-344d-4dfb-bbd3-cc2e58c08e8f"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000010"),
                            Label = "Toucan",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("925f71c6-5109-4c17-a368-123227db66f1"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000011"),
                            Label = "Anaconda",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("e4ab755f-b19f-4437-9ff0-28bf792e1a14"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000012"),
                            Label = "Capuchin Monkey",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("486ca0b6-bcbc-41c3-a32c-6d35534efa47"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000013"),
                            Label = "Poison Dart Frog",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("9d3af8ba-54f4-4cad-9ca9-86291aa9a236"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000014"),
                            Label = "Lion",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("7b2c99c3-21e4-4dba-808d-ffe125886843"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000015"),
                            Label = "African Elephant",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("c03d7a3e-aa07-4b3a-9f58-37efe133264b"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000016"),
                            Label = "Giraffe",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("28011505-bb47-442b-a667-4e9796e89f31"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000017"),
                            Label = "Zebra",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("7636485b-d41b-4332-a084-4d3ad577872f"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000018"),
                            Label = "Rhinoceros",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("d1ca3289-cac3-4f52-a85d-4e86489e3500"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000019"),
                            Label = "Bison",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("cd158ab9-a2bd-4ae9-acc6-03020f3e325d"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001a"),
                            Label = "Saiga Antelope",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("9a7171eb-a76f-41df-901e-89bdaa59330d"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001b"),
                            Label = "Gray Wolf",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("7f01c8d2-2f47-49f3-9f6d-7af64445d2ff"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001c"),
                            Label = "Przewalski's Horse",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("b936d03a-ea7c-498f-b71d-b7d89c402ed6"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001d"),
                            Label = "Steppe Eagle",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("9422401e-4a52-4aaf-bf8d-f342e4f15f63"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001e"),
                            Label = "Cow",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("d8d7cc44-74b2-4529-89c2-fc7f2d6ee157"),
                            AnimalId = new Guid("00000000-0000-0000-0000-00000000001f"),
                            Label = "Sheep",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("53fac458-9baf-4503-9d50-cea22537e2e7"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000020"),
                            Label = "Horse",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("489c2736-5802-4427-80d1-06e8168a870b"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000021"),
                            Label = "Chicken",
                            LanguageCode = "en-us"
                        },
                        new
                        {
                            Id = new Guid("11939639-28b9-4dd2-bf18-875c1761b4e4"),
                            AnimalId = new Guid("00000000-0000-0000-0000-000000000022"),
                            Label = "Pig",
                            LanguageCode = "en-us"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.BestiaryItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ArmsKey")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("BodyKey")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HeadKey")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Story")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)");

                    b.HasKey("Id");

                    b.ToTable("BestiaryItems");
                });

            modelBuilder.Entity("XooCreator.BA.Data.BodyPart", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("IsBaseLocked")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Key");

                    b.ToTable("BodyParts");

                    b.HasData(
                        new
                        {
                            Key = "head",
                            Image = "images/bodyparts/face.webp",
                            IsBaseLocked = false,
                            Name = "Head"
                        },
                        new
                        {
                            Key = "body",
                            Image = "images/bodyparts/body.webp",
                            IsBaseLocked = false,
                            Name = "Body"
                        },
                        new
                        {
                            Key = "arms",
                            Image = "images/bodyparts/hands.webp",
                            IsBaseLocked = false,
                            Name = "Arms"
                        },
                        new
                        {
                            Key = "legs",
                            Image = "images/bodyparts/legs.webp",
                            IsBaseLocked = true,
                            Name = "Legs"
                        },
                        new
                        {
                            Key = "tail",
                            Image = "images/bodyparts/tail.webp",
                            IsBaseLocked = true,
                            Name = "Tail"
                        },
                        new
                        {
                            Key = "wings",
                            Image = "images/bodyparts/wings.webp",
                            IsBaseLocked = true,
                            Name = "Wings"
                        },
                        new
                        {
                            Key = "horn",
                            Image = "images/bodyparts/horn.webp",
                            IsBaseLocked = true,
                            Name = "Horn"
                        },
                        new
                        {
                            Key = "horns",
                            Image = "images/bodyparts/horns.webp",
                            IsBaseLocked = true,
                            Name = "Horns"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.BodyPartTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyPartKey")
                        .IsRequired()
                        .HasColumnType("character varying(32)");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BodyPartKey", "LanguageCode")
                        .IsUnique();

                    b.ToTable("BodyPartTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6ac922c2-f30d-49e3-9413-01587d3ff77f"),
                            BodyPartKey = "head",
                            LanguageCode = "en-us",
                            Name = "Head"
                        },
                        new
                        {
                            Id = new Guid("93a2c570-d225-4df9-ba7d-bc67b5be9e3c"),
                            BodyPartKey = "body",
                            LanguageCode = "en-us",
                            Name = "Body"
                        },
                        new
                        {
                            Id = new Guid("a374a167-62b1-4bd7-babd-6dc78aef4da1"),
                            BodyPartKey = "arms",
                            LanguageCode = "en-us",
                            Name = "Arms"
                        },
                        new
                        {
                            Id = new Guid("88d3a687-1749-4f07-bf80-9814bd6ef64d"),
                            BodyPartKey = "legs",
                            LanguageCode = "en-us",
                            Name = "Legs"
                        },
                        new
                        {
                            Id = new Guid("2404b130-f621-4d0b-8de9-8191754b9b5b"),
                            BodyPartKey = "tail",
                            LanguageCode = "en-us",
                            Name = "Tail"
                        },
                        new
                        {
                            Id = new Guid("0cb094aa-a910-4ee5-9b43-99c8e96284fb"),
                            BodyPartKey = "wings",
                            LanguageCode = "en-us",
                            Name = "Wings"
                        },
                        new
                        {
                            Id = new Guid("3d7add73-14af-428a-84b5-e00b0e5e4764"),
                            BodyPartKey = "horn",
                            LanguageCode = "en-us",
                            Name = "Horn"
                        },
                        new
                        {
                            Id = new Guid("36b7b95a-5072-4457-9018-7d4bb7eefe33"),
                            BodyPartKey = "horns",
                            LanguageCode = "en-us",
                            Name = "Horns"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.BuilderConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BaseUnlockedAnimalIds")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BaseUnlockedBodyPartKeys")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BuilderConfigs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseUnlockedAnimalIds = "[\"00000000-0000-0000-0000-000000000001\",\"00000000-0000-0000-0000-000000000002\",\"00000000-0000-0000-0000-000000000003\"]",
                            BaseUnlockedBodyPartKeys = "[\"head\",\"body\",\"arms\"]"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.Creature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Archetype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PromptUsedJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Story")
                        .HasColumnType("text");

                    b.Property<string>("ThumbUrl")
                        .HasColumnType("text");

                    b.Property<string>("TraitsJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("TreeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TreeId");

                    b.HasIndex("UserId");

                    b.ToTable("Creatures");
                });

            modelBuilder.Entity("XooCreator.BA.Data.CreditTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Reference")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CreditTransactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Amount = 15,
                            CreatedAt = new DateTime(2025, 10, 22, 21, 24, 36, 438, DateTimeKind.Utc).AddTicks(2500),
                            Reference = "test-purchase-marian",
                            Type = 0,
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Amount = -5,
                            CreatedAt = new DateTime(2025, 10, 23, 19, 24, 36, 438, DateTimeKind.Utc).AddTicks(2506),
                            Reference = "test-generation",
                            Type = 1,
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.CreditWallet", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("Balance")
                        .HasColumnType("integer");

                    b.Property<int>("DiscoveryBalance")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId");

                    b.ToTable("CreditWallets");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Balance = 5,
                            DiscoveryBalance = 0,
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 438, DateTimeKind.Utc).AddTicks(2455)
                        },
                        new
                        {
                            UserId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Balance = 5,
                            DiscoveryBalance = 0,
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 438, DateTimeKind.Utc).AddTicks(2457)
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroClickMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AudioUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HeroId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MessageKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HeroId")
                        .IsUnique();

                    b.ToTable("HeroClickMessages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fbf43e17-cdf0-4823-8f4c-6ba31ffe29a9"),
                            AudioUrl = "audio/tol/heroes/puf-puf/click.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 435, DateTimeKind.Utc).AddTicks(4249),
                            HeroId = "puf-puf",
                            IsActive = true,
                            MessageKey = "hero_puf-puf_click_message",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 435, DateTimeKind.Utc).AddTicks(4249)
                        },
                        new
                        {
                            Id = new Guid("41af2a33-fa79-495c-b2a3-08ee20a05b08"),
                            AudioUrl = "audio/tol/heroes/linkaro/click.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 435, DateTimeKind.Utc).AddTicks(4258),
                            HeroId = "linkaro",
                            IsActive = true,
                            MessageKey = "hero_linkaro_click_message",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 435, DateTimeKind.Utc).AddTicks(4259)
                        },
                        new
                        {
                            Id = new Guid("b200f473-4b12-495c-85f2-b4730c836ddd"),
                            AudioUrl = "audio/tol/heroes/grubot/click.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 435, DateTimeKind.Utc).AddTicks(4261),
                            HeroId = "grubot",
                            IsActive = true,
                            MessageKey = "hero_grubot_click_message",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 435, DateTimeKind.Utc).AddTicks(4261)
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroDefinition", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("CourageCost")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreativityCost")
                        .HasColumnType("integer");

                    b.Property<int>("CuriosityCost")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsUnlocked")
                        .HasColumnType("boolean");

                    b.Property<double>("PositionX")
                        .HasColumnType("decimal(10,6)");

                    b.Property<double>("PositionY")
                        .HasColumnType("decimal(10,6)");

                    b.Property<string>("PrerequisitesJson")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("RewardsJson")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<int>("SafetyCost")
                        .HasColumnType("integer");

                    b.Property<int>("ThinkingCost")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("HeroDefinitions");

                    b.HasData(
                        new
                        {
                            Id = "puf-puf",
                            CourageCost = 0,
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 435, DateTimeKind.Utc).AddTicks(4507),
                            CreativityCost = 0,
                            CuriosityCost = 0,
                            Image = "images/heroes/puf-puf.png",
                            IsUnlocked = false,
                            PositionX = 0.0,
                            PositionY = 0.0,
                            PrerequisitesJson = "[]",
                            RewardsJson = "[]",
                            SafetyCost = 0,
                            ThinkingCost = 0,
                            Type = "STORY_HERO",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 435, DateTimeKind.Utc).AddTicks(4508)
                        },
                        new
                        {
                            Id = "linkaro",
                            CourageCost = 0,
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 435, DateTimeKind.Utc).AddTicks(4514),
                            CreativityCost = 0,
                            CuriosityCost = 0,
                            Image = "images/heroes/linkaro.png",
                            IsUnlocked = false,
                            PositionX = 0.0,
                            PositionY = 0.0,
                            PrerequisitesJson = "[]",
                            RewardsJson = "[]",
                            SafetyCost = 0,
                            ThinkingCost = 0,
                            Type = "STORY_HERO",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 435, DateTimeKind.Utc).AddTicks(4515)
                        },
                        new
                        {
                            Id = "grubot",
                            CourageCost = 0,
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 435, DateTimeKind.Utc).AddTicks(4519),
                            CreativityCost = 0,
                            CuriosityCost = 0,
                            Image = "images/heroes/grubot.png",
                            IsUnlocked = false,
                            PositionX = 0.0,
                            PositionY = 0.0,
                            PrerequisitesJson = "[]",
                            RewardsJson = "[]",
                            SafetyCost = 0,
                            ThinkingCost = 0,
                            Type = "STORY_HERO",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 435, DateTimeKind.Utc).AddTicks(4520)
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroDefinitionTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeroDefinitionId")
                        .IsRequired()
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Story")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HeroDefinitionId", "LanguageCode")
                        .IsUnique();

                    b.ToTable("HeroDefinitionTranslations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AudioUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HeroId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MessageKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("RegionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HeroId", "RegionId")
                        .IsUnique();

                    b.ToTable("HeroMessages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cdf4ae59-d7f9-4866-a33b-5fa11725b635"),
                            AudioUrl = "audio/tol/heroes/puf-puf/gateway.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9850),
                            HeroId = "puf-puf",
                            IsActive = true,
                            MessageKey = "hero_puf-puf_region_gateway_message",
                            RegionId = "gateway",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9851)
                        },
                        new
                        {
                            Id = new Guid("5efd22ef-5883-487f-953b-f900b4a40a57"),
                            AudioUrl = "audio/tol/heroes/puf-puf/terra.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9853),
                            HeroId = "puf-puf",
                            IsActive = true,
                            MessageKey = "hero_puf-puf_region_terra_message",
                            RegionId = "terra",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9853)
                        },
                        new
                        {
                            Id = new Guid("6444fcba-9190-41d3-94d1-4447d49690f2"),
                            AudioUrl = "audio/tol/heroes/puf-puf/lunaria.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9855),
                            HeroId = "puf-puf",
                            IsActive = true,
                            MessageKey = "hero_puf-puf_region_lunaria_message",
                            RegionId = "lunaria",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9855)
                        },
                        new
                        {
                            Id = new Guid("a5b0e065-6cc6-4b6e-84d8-86d31ad3f76a"),
                            AudioUrl = "audio/tol/heroes/puf-puf/oceanica.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9857),
                            HeroId = "puf-puf",
                            IsActive = true,
                            MessageKey = "hero_puf-puf_region_oceanica_message",
                            RegionId = "oceanica",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9857)
                        },
                        new
                        {
                            Id = new Guid("096db0f2-9d07-4e91-9bb5-54decb12f2b6"),
                            AudioUrl = "audio/tol/heroes/puf-puf/sylvaria.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9858),
                            HeroId = "puf-puf",
                            IsActive = true,
                            MessageKey = "hero_puf-puf_region_sylvaria_message",
                            RegionId = "sylvaria",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9858)
                        },
                        new
                        {
                            Id = new Guid("bf855e2c-1c95-4f25-be26-1e6acdbe5f5f"),
                            AudioUrl = "audio/tol/heroes/puf-puf/crystalia.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9860),
                            HeroId = "puf-puf",
                            IsActive = true,
                            MessageKey = "hero_puf-puf_region_crystalia_message",
                            RegionId = "crystalia",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9861)
                        },
                        new
                        {
                            Id = new Guid("8c8a3313-4e18-4658-a4a0-6d7c20d725ce"),
                            AudioUrl = "audio/tol/heroes/puf-puf/zephyra.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9866),
                            HeroId = "puf-puf",
                            IsActive = true,
                            MessageKey = "hero_puf-puf_region_zephyra_message",
                            RegionId = "zephyra",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9866)
                        },
                        new
                        {
                            Id = new Guid("76c16fa6-ce66-40e2-aafb-67ba1bf142e0"),
                            AudioUrl = "audio/tol/heroes/puf-puf/pyron.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9868),
                            HeroId = "puf-puf",
                            IsActive = true,
                            MessageKey = "hero_puf-puf_region_pyron_message",
                            RegionId = "pyron",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9868)
                        },
                        new
                        {
                            Id = new Guid("47e88f3a-00a9-4c42-a5ca-84eafd48fa75"),
                            AudioUrl = "audio/tol/heroes/puf-puf/neptunia.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9869),
                            HeroId = "puf-puf",
                            IsActive = true,
                            MessageKey = "hero_puf-puf_region_neptunia_message",
                            RegionId = "neptunia",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9869)
                        },
                        new
                        {
                            Id = new Guid("c91127ba-c5c9-4844-9e2e-ad3e277da8e5"),
                            AudioUrl = "audio/tol/heroes/puf-puf/aetherion.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9871),
                            HeroId = "puf-puf",
                            IsActive = true,
                            MessageKey = "hero_puf-puf_region_aetherion_message",
                            RegionId = "aetherion",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9871)
                        },
                        new
                        {
                            Id = new Guid("4f35a2b3-b6d2-400c-9200-49c0b596d169"),
                            AudioUrl = "audio/tol/heroes/puf-puf/kelo-ketis.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9873),
                            HeroId = "puf-puf",
                            IsActive = true,
                            MessageKey = "hero_puf-puf_region_kelo_ketis_message",
                            RegionId = "kelo-ketis",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9873)
                        },
                        new
                        {
                            Id = new Guid("ff1977ea-c266-4116-8b23-850ef0611895"),
                            AudioUrl = "audio/tol/heroes/linkaro/gateway.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9875),
                            HeroId = "linkaro",
                            IsActive = true,
                            MessageKey = "hero_linkaro_region_gateway_message",
                            RegionId = "gateway",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9875)
                        },
                        new
                        {
                            Id = new Guid("845f126f-da22-4bf4-9765-5ee5a8926700"),
                            AudioUrl = "audio/tol/heroes/linkaro/terra.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9876),
                            HeroId = "linkaro",
                            IsActive = true,
                            MessageKey = "hero_linkaro_region_terra_message",
                            RegionId = "terra",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9876)
                        },
                        new
                        {
                            Id = new Guid("fcc4baba-e786-410b-bb40-116c92c583b3"),
                            AudioUrl = "audio/tol/heroes/linkaro/lunaria.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9877),
                            HeroId = "linkaro",
                            IsActive = true,
                            MessageKey = "hero_linkaro_region_lunaria_message",
                            RegionId = "lunaria",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9878)
                        },
                        new
                        {
                            Id = new Guid("39ab6a6d-98ad-4b5f-baa9-df16cfa23604"),
                            AudioUrl = "audio/tol/heroes/linkaro/mechanika.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9880),
                            HeroId = "linkaro",
                            IsActive = true,
                            MessageKey = "hero_linkaro_region_mechanika_message",
                            RegionId = "mechanika",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9880)
                        },
                        new
                        {
                            Id = new Guid("21088430-4366-4b05-9e6c-38ab02bb9e42"),
                            AudioUrl = "audio/tol/heroes/linkaro/oceanica.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9882),
                            HeroId = "linkaro",
                            IsActive = true,
                            MessageKey = "hero_linkaro_region_oceanica_message",
                            RegionId = "oceanica",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9882)
                        },
                        new
                        {
                            Id = new Guid("7bd6498d-bb83-4d61-8972-439b3507163d"),
                            AudioUrl = "audio/tol/heroes/linkaro/sylvaria.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9883),
                            HeroId = "linkaro",
                            IsActive = true,
                            MessageKey = "hero_linkaro_region_sylvaria_message",
                            RegionId = "sylvaria",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9883)
                        },
                        new
                        {
                            Id = new Guid("35d76dc6-7f40-4737-ba64-719c645e9af8"),
                            AudioUrl = "audio/tol/heroes/linkaro/crystalia.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9885),
                            HeroId = "linkaro",
                            IsActive = true,
                            MessageKey = "hero_linkaro_region_crystalia_message",
                            RegionId = "crystalia",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9885)
                        },
                        new
                        {
                            Id = new Guid("8df1a9ad-deb0-428b-9f8c-9d3a6634cfc4"),
                            AudioUrl = "audio/tol/heroes/linkaro/zephyra.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9886),
                            HeroId = "linkaro",
                            IsActive = true,
                            MessageKey = "hero_linkaro_region_zephyra_message",
                            RegionId = "zephyra",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9887)
                        },
                        new
                        {
                            Id = new Guid("fe95c133-9d5d-4b0d-b5e8-33ff36e6c90b"),
                            AudioUrl = "audio/tol/heroes/linkaro/pyron.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9888),
                            HeroId = "linkaro",
                            IsActive = true,
                            MessageKey = "hero_linkaro_region_pyron_message",
                            RegionId = "pyron",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9888)
                        },
                        new
                        {
                            Id = new Guid("fbcc5e94-c8ed-4069-9351-9b8683f25aaf"),
                            AudioUrl = "audio/tol/heroes/linkaro/neptunia.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9889),
                            HeroId = "linkaro",
                            IsActive = true,
                            MessageKey = "hero_linkaro_region_neptunia_message",
                            RegionId = "neptunia",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9890)
                        },
                        new
                        {
                            Id = new Guid("6d02d679-3326-4fac-b552-7438c4e00d78"),
                            AudioUrl = "audio/tol/heroes/linkaro/aetherion.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9891),
                            HeroId = "linkaro",
                            IsActive = true,
                            MessageKey = "hero_linkaro_region_aetherion_message",
                            RegionId = "aetherion",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9891)
                        },
                        new
                        {
                            Id = new Guid("5550bfb0-b8a4-421a-b1eb-06de43369a88"),
                            AudioUrl = "audio/tol/heroes/linkaro/kelo-ketis.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9893),
                            HeroId = "linkaro",
                            IsActive = true,
                            MessageKey = "hero_linkaro_region_kelo_ketis_message",
                            RegionId = "kelo-ketis",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9894)
                        },
                        new
                        {
                            Id = new Guid("437c3890-2641-4122-bd9d-8eabd56cd543"),
                            AudioUrl = "audio/tol/heroes/grubot/gateway.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9895),
                            HeroId = "grubot",
                            IsActive = true,
                            MessageKey = "hero_grubot_region_gateway_message",
                            RegionId = "gateway",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9895)
                        },
                        new
                        {
                            Id = new Guid("521bb69b-11a6-4d81-89b3-21b60a8c92d2"),
                            AudioUrl = "audio/tol/heroes/grubot/terra.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9896),
                            HeroId = "grubot",
                            IsActive = true,
                            MessageKey = "hero_grubot_region_terra_message",
                            RegionId = "terra",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9897)
                        },
                        new
                        {
                            Id = new Guid("95054c19-0661-45fe-a65f-c3bc913cda8e"),
                            AudioUrl = "audio/tol/heroes/grubot/lunaria.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9898),
                            HeroId = "grubot",
                            IsActive = true,
                            MessageKey = "hero_grubot_region_lunaria_message",
                            RegionId = "lunaria",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9898)
                        },
                        new
                        {
                            Id = new Guid("91a06e06-e50f-479c-b1d6-000702c59c58"),
                            AudioUrl = "audio/tol/heroes/grubot/mechanika.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9899),
                            HeroId = "grubot",
                            IsActive = true,
                            MessageKey = "hero_grubot_region_mechanika_message",
                            RegionId = "mechanika",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9900)
                        },
                        new
                        {
                            Id = new Guid("8b7ef850-80d8-4b49-8077-880730cb03d3"),
                            AudioUrl = "audio/tol/heroes/grubot/oceanica.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9901),
                            HeroId = "grubot",
                            IsActive = true,
                            MessageKey = "hero_grubot_region_oceanica_message",
                            RegionId = "oceanica",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9901)
                        },
                        new
                        {
                            Id = new Guid("b7f4d52c-dd9e-456f-b92e-ea7e21136178"),
                            AudioUrl = "audio/tol/heroes/grubot/sylvaria.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9902),
                            HeroId = "grubot",
                            IsActive = true,
                            MessageKey = "hero_grubot_region_sylvaria_message",
                            RegionId = "sylvaria",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9902)
                        },
                        new
                        {
                            Id = new Guid("17acc99a-3ddc-4017-be3d-0398f64541b0"),
                            AudioUrl = "audio/tol/heroes/grubot/crystalia.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9903),
                            HeroId = "grubot",
                            IsActive = true,
                            MessageKey = "hero_grubot_region_crystalia_message",
                            RegionId = "crystalia",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9904)
                        },
                        new
                        {
                            Id = new Guid("faa41917-2c52-4c3a-a12c-dc880f39027f"),
                            AudioUrl = "audio/tol/heroes/grubot/zephyra.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9906),
                            HeroId = "grubot",
                            IsActive = true,
                            MessageKey = "hero_grubot_region_zephyra_message",
                            RegionId = "zephyra",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9906)
                        },
                        new
                        {
                            Id = new Guid("5175982a-a909-43f2-bf77-128ea7ac6894"),
                            AudioUrl = "audio/tol/heroes/grubot/pyron.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9908),
                            HeroId = "grubot",
                            IsActive = true,
                            MessageKey = "hero_grubot_region_pyron_message",
                            RegionId = "pyron",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9908)
                        },
                        new
                        {
                            Id = new Guid("2e13a8de-0d6b-47b1-b0c1-d5ce2258f2ed"),
                            AudioUrl = "audio/tol/heroes/grubot/neptunia.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9909),
                            HeroId = "grubot",
                            IsActive = true,
                            MessageKey = "hero_grubot_region_neptunia_message",
                            RegionId = "neptunia",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9909)
                        },
                        new
                        {
                            Id = new Guid("72dc3180-3ed3-464b-87b7-829d6156b2eb"),
                            AudioUrl = "audio/tol/heroes/grubot/aetherion.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9939),
                            HeroId = "grubot",
                            IsActive = true,
                            MessageKey = "hero_grubot_region_aetherion_message",
                            RegionId = "aetherion",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9939)
                        },
                        new
                        {
                            Id = new Guid("0f1d26ea-7d32-4f24-abde-67836596ce1b"),
                            AudioUrl = "audio/tol/heroes/grubot/kelo-ketis.wav",
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9940),
                            HeroId = "grubot",
                            IsActive = true,
                            MessageKey = "hero_grubot_region_kelo_ketis_message",
                            RegionId = "kelo-ketis",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(9941)
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("HeroId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeroType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SourceStoryId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UnlockedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "HeroId", "HeroType")
                        .IsUnique();

                    b.ToTable("HeroProgress");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            HeroId = "seed",
                            HeroType = "HERO_TREE_TRANSFORMATION",
                            SourceStoryId = "",
                            UnlockedAt = new DateTime(2025, 10, 23, 21, 24, 36, 438, DateTimeKind.Utc).AddTicks(2475),
                            UserId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            HeroId = "seed",
                            HeroType = "HERO_TREE_TRANSFORMATION",
                            SourceStoryId = "",
                            UnlockedAt = new DateTime(2025, 10, 23, 21, 24, 36, 438, DateTimeKind.Utc).AddTicks(2478),
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroTreeProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NodeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TokensCostCourage")
                        .HasColumnType("integer");

                    b.Property<int>("TokensCostCreativity")
                        .HasColumnType("integer");

                    b.Property<int>("TokensCostCuriosity")
                        .HasColumnType("integer");

                    b.Property<int>("TokensCostSafety")
                        .HasColumnType("integer");

                    b.Property<int>("TokensCostThinking")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UnlockedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "NodeId")
                        .IsUnique();

                    b.ToTable("HeroTreeProgress");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Error")
                        .HasColumnType("text");

                    b.Property<string>("PayloadJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResultUrl")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasMaxLength(24)
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasMaxLength(24)
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Sahara"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000002"),
                            Name = "Jungle"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000003"),
                            Name = "Farm"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000004"),
                            Name = "Savanna"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000005"),
                            Name = "Forest"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000006"),
                            Name = "Wetlands"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000007"),
                            Name = "Mountains"
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AnswerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<Guid>("StoryTileId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TokensJson")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StoryTileId", "AnswerId")
                        .IsUnique();

                    b.ToTable("StoryAnswers");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswerToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid>("StoryAnswerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("StoryAnswerId");

                    b.ToTable("StoryAnswerTokens");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswerTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<Guid>("StoryAnswerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StoryAnswerId", "LanguageCode")
                        .IsUnique();

                    b.ToTable("StoryAnswerTranslations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CoverImageUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("StoryId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("StoryId")
                        .IsUnique();

                    b.ToTable("StoryDefinitions");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryDefinitionTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<Guid>("StoryDefinitionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StoryDefinitionId", "LanguageCode")
                        .IsUnique();

                    b.ToTable("StoryDefinitionTranslations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryHero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HeroId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("UnlockConditionJson")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HeroId")
                        .IsUnique();

                    b.ToTable("StoryHeroes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000100"),
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(2513),
                            HeroId = "puf-puf",
                            ImageUrl = "images/tol/stories/intro-pufpuf/heroes/puf-puf.png",
                            IsActive = true,
                            UnlockConditionJson = "{\"Type\":\"story_completion\",\"RequiredStories\":[\"intro-pufpuf\"],\"MinProgress\":100}",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(2514)
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111100"),
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(2537),
                            HeroId = "linkaro",
                            ImageUrl = "images/tol/stories/lunaria-s1/heroes/linkaro.png",
                            IsActive = true,
                            UnlockConditionJson = "{\"Type\":\"story_completion\",\"RequiredStories\":[\"lunaria-s1\"],\"MinProgress\":100}",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(2538)
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222200"),
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(2547),
                            HeroId = "grubot",
                            ImageUrl = "images/tol/stories/mechanika-s1/heroes/grubot.png",
                            IsActive = true,
                            UnlockConditionJson = "{\"Type\":\"story_completion\",\"RequiredStories\":[\"mechanika-s1\"],\"MinProgress\":100}",
                            UpdatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(2548)
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryHeroUnlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("StoryHeroId")
                        .HasColumnType("uuid");

                    b.Property<string>("StoryId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("UnlockOrder")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StoryHeroId", "StoryId")
                        .IsUnique();

                    b.ToTable("StoryHeroUnlocks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6c74638-eab6-4f07-9419-17e70bfd4002"),
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(4693),
                            StoryHeroId = new Guid("00000000-0000-0000-0000-000000000100"),
                            StoryId = "intro-pufpuf",
                            UnlockOrder = 1
                        },
                        new
                        {
                            Id = new Guid("ab6ef57e-acfd-474c-9e0b-933161b52de2"),
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(4723),
                            StoryHeroId = new Guid("11111111-1111-1111-1111-111111111100"),
                            StoryId = "lunaria-s1",
                            UnlockOrder = 1
                        },
                        new
                        {
                            Id = new Guid("28bf1b78-f89c-4f91-bb3a-438a079daa67"),
                            CreatedAt = new DateTime(2025, 10, 23, 21, 24, 36, 434, DateTimeKind.Utc).AddTicks(4745),
                            StoryHeroId = new Guid("22222222-2222-2222-2222-222222222200"),
                            StoryId = "mechanika-s1",
                            UnlockOrder = 1
                        });
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SelectedAnswer")
                        .HasColumnType("text");

                    b.Property<string>("StoryId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TokensJson")
                        .HasColumnType("text");

                    b.Property<string>("TreeConfigurationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TreeConfigurationId");

                    b.HasIndex("UserId", "StoryId", "TreeConfigurationId")
                        .IsUnique();

                    b.ToTable("StoryProgress");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryTile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AudioUrl")
                        .HasColumnType("text");

                    b.Property<string>("Caption")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Question")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<Guid>("StoryDefinitionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<string>("TileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("StoryDefinitionId", "TileId")
                        .IsUnique();

                    b.ToTable("StoryTiles");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryTileTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Caption")
                        .HasColumnType("text");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Question")
                        .HasColumnType("text");

                    b.Property<Guid>("StoryTileId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StoryTileId", "LanguageCode")
                        .IsUnique();

                    b.ToTable("StoryTileTranslations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Tree", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentTier")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("RootType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Trees");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeChoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BranchType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Tier")
                        .HasColumnType("integer");

                    b.Property<string>("TraitAwarded")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TreeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TreeId", "Tier")
                        .IsUnique();

                    b.ToTable("TreeChoices");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeConfiguration", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TreeConfigurations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsUnlocked")
                        .HasColumnType("boolean");

                    b.Property<string>("RegionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TreeConfigurationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UnlockedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TreeConfigurationId");

                    b.HasIndex("UserId", "RegionId", "TreeConfigurationId")
                        .IsUnique();

                    b.ToTable("TreeProgress");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PufpufMessage")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("TreeConfigurationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("TreeConfigurationId");

                    b.HasIndex("Id", "TreeConfigurationId")
                        .IsUnique();

                    b.ToTable("TreeRegions");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeStoryNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RegionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RewardImageUrl")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("StoryId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TreeConfigurationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("TreeConfigurationId");

                    b.HasIndex("StoryId", "RegionId", "TreeConfigurationId")
                        .IsUnique();

                    b.ToTable("TreeStoryNodes");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeUnlockRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FromId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("MinCount")
                        .HasColumnType("integer");

                    b.Property<string>("RequiredStoriesCsv")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("StoryId")
                        .HasColumnType("text");

                    b.Property<string>("ToRegionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TreeConfigurationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("TreeConfigurationId");

                    b.ToTable("TreeUnlockRules");
                });

            modelBuilder.Entity("XooCreator.BA.Data.UserBestiary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BestiaryItemId")
                        .HasColumnType("uuid");

                    b.Property<string>("BestiaryType")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<DateTime>("DiscoveredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BestiaryItemId");

                    b.HasIndex("UserId", "BestiaryItemId", "BestiaryType")
                        .IsUnique();

                    b.ToTable("UserBestiary", (string)null);
                });

            modelBuilder.Entity("XooCreator.BA.Data.UserStoryReadProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ReadAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StoryId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "StoryId", "TileId")
                        .IsUnique();

                    b.ToTable("UserStoryReadProgress");
                });

            modelBuilder.Entity("XooCreator.BA.Data.UserTokenBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Type", "Value")
                        .IsUnique();

                    b.ToTable("UserTokenBalances");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Animal", b =>
                {
                    b.HasOne("XooCreator.BA.Data.Region", "Region")
                        .WithMany("Animals")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("XooCreator.BA.Data.AnimalPartSupport", b =>
                {
                    b.HasOne("XooCreator.BA.Data.Animal", "Animal")
                        .WithMany("SupportedParts")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XooCreator.BA.Data.BodyPart", "Part")
                        .WithMany()
                        .HasForeignKey("PartKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("XooCreator.BA.Data.AnimalTranslation", b =>
                {
                    b.HasOne("XooCreator.BA.Data.Animal", "Animal")
                        .WithMany("Translations")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("XooCreator.BA.Data.BodyPartTranslation", b =>
                {
                    b.HasOne("XooCreator.BA.Data.BodyPart", "BodyPart")
                        .WithMany("Translations")
                        .HasForeignKey("BodyPartKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyPart");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Creature", b =>
                {
                    b.HasOne("XooCreator.BA.Data.Tree", "Tree")
                        .WithMany()
                        .HasForeignKey("TreeId");

                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tree");

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.CreditTransaction", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.CreditWallet", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithOne()
                        .HasForeignKey("XooCreator.BA.Data.CreditWallet", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroDefinitionTranslation", b =>
                {
                    b.HasOne("XooCreator.BA.Data.HeroDefinition", "HeroDefinition")
                        .WithMany("Translations")
                        .HasForeignKey("HeroDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeroDefinition");
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroProgress", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroTreeProgress", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Job", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswer", b =>
                {
                    b.HasOne("XooCreator.BA.Data.StoryTile", "StoryTile")
                        .WithMany("Answers")
                        .HasForeignKey("StoryTileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoryTile");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswerToken", b =>
                {
                    b.HasOne("XooCreator.BA.Data.StoryAnswer", "StoryAnswer")
                        .WithMany("Tokens")
                        .HasForeignKey("StoryAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoryAnswer");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswerTranslation", b =>
                {
                    b.HasOne("XooCreator.BA.Data.StoryAnswer", "StoryAnswer")
                        .WithMany("Translations")
                        .HasForeignKey("StoryAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoryAnswer");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryDefinitionTranslation", b =>
                {
                    b.HasOne("XooCreator.BA.Data.StoryDefinition", "StoryDefinition")
                        .WithMany("Translations")
                        .HasForeignKey("StoryDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoryDefinition");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryHeroUnlock", b =>
                {
                    b.HasOne("XooCreator.BA.Data.StoryHero", "StoryHero")
                        .WithMany("StoryUnlocks")
                        .HasForeignKey("StoryHeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoryHero");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryProgress", b =>
                {
                    b.HasOne("XooCreator.BA.Data.TreeConfiguration", "TreeConfiguration")
                        .WithMany()
                        .HasForeignKey("TreeConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TreeConfiguration");

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryTile", b =>
                {
                    b.HasOne("XooCreator.BA.Data.StoryDefinition", "StoryDefinition")
                        .WithMany("Tiles")
                        .HasForeignKey("StoryDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoryDefinition");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryTileTranslation", b =>
                {
                    b.HasOne("XooCreator.BA.Data.StoryTile", "StoryTile")
                        .WithMany("Translations")
                        .HasForeignKey("StoryTileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoryTile");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Tree", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeChoice", b =>
                {
                    b.HasOne("XooCreator.BA.Data.Tree", "Tree")
                        .WithMany("Choices")
                        .HasForeignKey("TreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tree");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeProgress", b =>
                {
                    b.HasOne("XooCreator.BA.Data.TreeConfiguration", "TreeConfiguration")
                        .WithMany()
                        .HasForeignKey("TreeConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TreeConfiguration");

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeRegion", b =>
                {
                    b.HasOne("XooCreator.BA.Data.TreeConfiguration", "TreeConfiguration")
                        .WithMany()
                        .HasForeignKey("TreeConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TreeConfiguration");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeStoryNode", b =>
                {
                    b.HasOne("XooCreator.BA.Data.TreeRegion", "Region")
                        .WithMany("Stories")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XooCreator.BA.Data.StoryDefinition", "StoryDefinition")
                        .WithMany()
                        .HasForeignKey("StoryId")
                        .HasPrincipalKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XooCreator.BA.Data.TreeConfiguration", "TreeConfiguration")
                        .WithMany()
                        .HasForeignKey("TreeConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("StoryDefinition");

                    b.Navigation("TreeConfiguration");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeUnlockRule", b =>
                {
                    b.HasOne("XooCreator.BA.Data.TreeConfiguration", "TreeConfiguration")
                        .WithMany()
                        .HasForeignKey("TreeConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TreeConfiguration");
                });

            modelBuilder.Entity("XooCreator.BA.Data.UserBestiary", b =>
                {
                    b.HasOne("XooCreator.BA.Data.BestiaryItem", "BestiaryItem")
                        .WithMany()
                        .HasForeignKey("BestiaryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BestiaryItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.UserStoryReadProgress", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.UserTokenBalance", b =>
                {
                    b.HasOne("XooCreator.BA.Data.AlchimaliaUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Animal", b =>
                {
                    b.Navigation("SupportedParts");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.BodyPart", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.HeroDefinition", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Region", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryAnswer", b =>
                {
                    b.Navigation("Tokens");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryDefinition", b =>
                {
                    b.Navigation("Tiles");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryHero", b =>
                {
                    b.Navigation("StoryUnlocks");
                });

            modelBuilder.Entity("XooCreator.BA.Data.StoryTile", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("XooCreator.BA.Data.Tree", b =>
                {
                    b.Navigation("Choices");
                });

            modelBuilder.Entity("XooCreator.BA.Data.TreeRegion", b =>
                {
                    b.Navigation("Stories");
                });
#pragma warning restore 612, 618
        }
    }
}
